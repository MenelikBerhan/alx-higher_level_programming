============================
The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
-------------------
Prototype: ``def matrix_divided(matrix, div):``

This is a test file in reStructuredText format.  First import
``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now test it for various cases:
Proper arguments
================
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
    >>> matrix
    [[1, 2, 3], [4, 5, 6]]

Matrix with different size rows
==============================
    >>> matrix_divided([[1, 2, 3], [4, 5]], 3)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

Matrix containing non-number element
====================================
    >>> matrix_divided([[1, 2, 3], [4, 5, 'a']], 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

div is not a number
===================
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], '3')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

div is equal to 0
=================
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

Empty matrix
============
    >>> matrix_divided([], 3)
    []

Matrix with Empty lists
=======================
    >>> matrix_divided([[], []], 3)
    [[], []]
