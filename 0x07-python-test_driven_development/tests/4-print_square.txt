============================
The ``4-print_square`` module
============================

Using ``print_square``
-------------------
Prototype: ``def print_square(size):``

This is a test file in reStructuredText format.  First import
``print_square`` from the ``4-print_square`` module:

    >>> print_square = __import__('4-print_square').print_square

Now test it for various cases:
Proper arguments
================
    >>> print_square(4) #doctest: +REPORT_ONLY_FIRST_FAILURE
    ####
    ####
    ####
    ####


size not integer
================
    >>> print_square("John")
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

size less than zero
===================
    >>> print_square(-1)
    Traceback (most recent call last):
        ...
    ValueError: size must be >= 0

size a float less than zero
===========================
    >>> print_square(-1.5)
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

Size equals zero
================
    >>> print_square(0)

Muliple commands
================
    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

No argument
===========
    >>> print_square() #doctest: +ELLIPSIS
    Traceback (most recent call last):
    TypeError...
